#!/bin/sh
APP_NAME=intelY_mid
NP=24
NP_PER_NODE=12
RUN="RAW"
CURDIR=$PWD

VASP=/home-yw/Soft/Vasp5.4/vasp_std
source  /home-yw/env/intel-12.1.sh
source  /home-yw/env/openmpi-1.6.5-intel.sh

cd $CURDIR

#start creating .nodelist
rm -rf $CURDIR/nodelist >& /dev/null
for i in `echo $LSB_HOSTS`
do
    echo "$i" >> $CURDIR/nodelist
done
nodelist=$(cat $CURDIR/nodelist | uniq | awk '{print $1}' | tr '\n' ',')

function runvasp(){
#
echo -n "start time  " > time
date >> time

# for GK & YW users
touch WAVECAR PCDAT IBZKPT XDATCAR OSZICAR CONTCAR CHG PROCAR OUTCAR EIGENVAL DOSCAR CHGCAR
sleep 10

mpirun -np $NP -machinefile $CURDIR/nodelist $VASP  &> vasp.out
echo -n "end   time  " >> time ; date >> time
cat time >> vasp.out
#
}



function check(){
if [ ! -f "OUTCAR" ] ;then
echo "$(pwd) error_no_OUTCAR" > ~/renjunsong/tools/errorinfo
exit
fi
tail "OUTCAR" > "OUTINFO"
outcheck=$(grep "Voluntary context switches:" OUTINFO) 
rm OUTINFO
if [ -z "$outcheck" ]
then
echo "$(pwd) error" > ~/renjunsong/tools/errorinfo
exit
fi
}


function s5_relax(){
cp 1 5.relax -r
cd 5.relax
runvasp
check
cd ..
}

function s5_static_opt(){
bash ~/renjunsong/tools/static_opt
cd 5.static
runvasp
check
cd ..
}

function s5_static(){
bash ~/renjunsong/tools/static
cd 5.static
runvasp
check
cd ..
}

function s7(){
bash ~/renjunsong/tools/chg
cd 7.chg
runvasp
check
cd ..
}

function s8(){
bash ~/renjunsong/tools/band
cd 8.band
runvasp
check
python ~/renjunsong/tools/bandscript.py
cd ..
}


function s9(){
bash ~/renjunsong/tools/dos
cd 9.dos
runvasp
check
python ~/renjunsong/tools/dosscript.py
cd ..
}

function s10(){
bash ~/renjunsong/tools/optics
cd 10.optics
runvasp
check
python ~/renjunsong/tools/optscript.py
cd ..
}

function s10_metal(){
bash ~/renjunsong/tools/optics_metal
cd 10.optics
runvasp
check
python ~/renjunsong/tools/optscript.py
cd ..
}

function main(){
if [ $(($1 % 2)) == 0 ]; then
s5_relax
fi
if [ $(($1 % 3)) == 0 ]; then
if [ $(($2 % 2)) == 0 ]; then
s5_static_opt
else
s5_static
fi
fi
if [ $(($1 % 5)) == 0 ]; then
s7
fi
if [ $(($1 % 7)) == 0 ]; then
s8
fi
if [ $(($1 % 11)) == 0 ]; then
if [ $(($2 % 3)) == 0 ]; then
s9
else
s9
fi
fi
if [ $(($1 % 13)) == 0 ]; then
if [ $(($2 % 5)) == 0 ]; then
s10_metal
else
s10
fi
fi
}

function loop(){
for i in $(ls -d */)
do
if [[ $i == no* ]] ; then
continue
fi
if [ $(($1 % 7)) == 0 ]; then
cp KPOINTS_band $i/KPOINTS_band
fi
if [ $(($1 % 11)) == 0 ]; then
cp KPOINTS_dos $i/KPOINTS_dos
fi
cd $i
main $1 $2
if [ $(($1 % 7)) == 0 ]; then
rm KPOINTS_band
fi
if [ $(($1 % 11)) == 0 ]; then
rm KPOINTS_dos
fi
cd ..
done
}

function choose(){
for i in $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14} ${15} ${16} ${17} ${18} ${19} ${20} ${21} ${22} ${23} ${24} ${25} ${26} ${27} ${28} ${29} ${30} ${31} ${32} ${33} ${34} ${35} ${36} ${37} ${38} ${39} ${40} ${41} ${42} ${43}
do
if [ $(($1 % 7)) == 0 ]; then
cp KPOINTS_band $i/KPOINTS_band
fi
if [ $(($1 % 11)) == 0 ]; then
cp KPOINTS_dos $i/KPOINTS_dos
fi
cd $i
main $1 $2
if [ $(($1 % 7)) == 0 ]; then
rm KPOINTS_band
fi
if [ $(($1 % 11)) == 0 ]; then
rm KPOINTS_dos
fi
cd ..
done
}

####LLLL###Don`t delete this line###
loop 6 2
##choose $temp1 $temp2
##loop $temp1 $temp2
##main $temp1 $temp2
exit
